name: 8080-cpu-emulator-rust-build

on:
  push:
    branches: [ "8080-emulator" ]
    tags:
    - 'v*'
  pull_request:
    branches: [ "8080-emulator" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run tests
      run: cargo test --verbose
    - name: Run cpu diagnosis
      run: cargo run --features="bdos_mock"
    - name: Install targets
      run: rustup target add aarch64-apple-ios aarch64-apple-darwin x86_64-apple-darwin
    - name: Build for x86_64 macOS
      run: cargo build --lib --target=x86_64-apple-darwin --release --verbose
    - name: Build for Apple Silicon macOS
      run: cargo build --lib --target=aarch64-apple-darwin --release --verbose
    - name: Build for iOS
      run: cargo build --lib --target=aarch64-apple-ios --release --verbose
    - name: Get tag name from ref
      id: get_tag
      run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/x86_64-apple-darwin/release/libi8080emulator.a
        asset_name: libi8080emulator_x86_64_darwin.a
        asset_content_type: application/octet-stream
